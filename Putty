Tom 1 

Zadanie 1 

1. Stwórz tabele postac z nastepujacymi polami:
a. id_postaci kl. gtówny, liczba samozwiekszajaca sie
b. nazwa - ciag znaków max 40
c. rodzaj - typ wyliczeniowy (wiking, ptak, kobieta)
d. data_ur - typ daty
e. wiek - liczba nieujemna.

CREATE TABLE postac (
    id_postaci INT AUTO_INCREMENT PRIMARY KEY,
    nazwa VARCHAR(40),
    rodzaj ENUM('wiking', 'ptak', 'kobieta'),
    data_ur DATE,
    wiek INT UNSIGNED
);

2. Do tabeli postac dodaj rekordy, gdzie kolumna naza to Bjorn, Drozd, Tesciowa (w pozostare pola wisz w miare sensowne dane).

-- Dodanie rekordu dla Bjorna
INSERT INTO postac (nazwa, rodzaj, data_ur, wiek)
VALUES ('Bjorn', 'wiking', '1990-05-15', 33);

-- Dodanie rekordu dla Drozda
INSERT INTO postac (nazwa, rodzaj, data_ur, wiek)
VALUES ('Drozd', 'ptak', '2015-02-20', 8);

-- Dodanie rekordu dla Tesciowej
INSERT INTO postac (nazwa, rodzaj, data_ur, wiek)
VALUES ('Tesciowa', 'kobieta', '1935-12-10', 87);

3. Zmodyfikuj wiek tesciowej na 88 lat.

UPDATE postac
SET wiek = 88
WHERE nazwa = 'Tesciowa';

Zadanie 2 

1. Stwórz tabele walizka:
a. id_walizki - liczba samozwiekszajaca sie, klucz growny
b. pojemnosc - liczba nieujemna
c. kolor - typ wyliczeniowy (rózowy, czerwony, teczowy, zótty)
d. id_wlasciciela - klucz obcy odwotujacy sie do tabeli postac, ustawione kaskadowe
usuwanie.

CREATE TABLE walizka (
    id_walizki INT AUTO_INCREMENT PRIMARY KEY,
    pojemnosc INT UNSIGNED,
    kolor ENUM('rózowy', 'czerwony', 'teczowy', 'żółty') ,
    id_wlasciciela INT,
    FOREIGN KEY (id_wlasciciela) REFERENCES postac(id_postaci) ON DELETE CASCADE
);

2. Dodaj do pola kolor wartosc domyslna - rózowy.

ALTER TABLE walizka
ALTER COLUMN kolor SET DEFAULT 'rózowy';

3. Dodaj jedna walizke dla Bjorna i jedna walizke, dla tesciowej.

-- Dodanie walizki dla Bjorna
INSERT INTO walizka (pojemnosc, id_wlasciciela)
VALUES (30, (SELECT id_postaci FROM postac WHERE nazwa = 'Bjorn'));

-- Dodanie walizki dla teściowej
INSERT INTO walizka (pojemnosc, id_wlasciciela)
VALUES (25, (SELECT id_postaci FROM postac WHERE nazwa = 'Tesciowa'));

Zadanie 3 

1. Stwórz tabele izba z polami:
a. adres_budynku - czesc klucza gtównego
b. nazwa_izby - czesc klucza gtównego
c. metraz - liczba nieujemna
d. wlasciciel - klucz obcy do tabeli postac, ustaw null w razie usuniecia.

CREATE TABLE izba (
    adres_budynku INT,
    nazwa_izby VARCHAR(50),
    metraz INT UNSIGNED,
    wlasciciel INT,
    PRIMARY KEY (adres_budynku, nazwa_izby),
    FOREIGN KEY (wlasciciel) REFERENCES postac(id_postaci) ON DELETE SET NULL
);

2. Za pomoca odazielnego polecenia dodaj pole kolor izby po polu metraz. Ustaw domysiny kolor na czarny.

ALTER TABLE izba
ADD COLUMN kolor VARCHAR(20) DEFAULT 'czarny' AFTER metraz;

3. Stworz izbe spizarnia.

INSERT INTO izba (adres_budynku, nazwa_izby, metraz, kolor, wlasciciel)
VALUES (1, 'spizarnia', 15, 'zielony', NULL);

Zadanie 4 

1. Stwórz tabele pretwory z polami:
a. Id _przetworu - Klucz growny
b. rok_produkji - typ roku, domyslnie 1654
c. id_wykonawcy - klucz obcy do tabeli postac
d. zawartosc - ciag znaków
e. dodatek - ciag znaków - domyslnie papryczka chilli
f. id_konsumenta - klucz obcy do tabeli postac

CREATE TABLE przetwory (
    Id_przetworu INT AUTO_INCREMENT PRIMARY KEY,
    rok_produkcji YEAR DEFAULT 1654,
    id_wykonawcy INT,
    zawartosc TEXT,
    dodatek VARCHAR(50) DEFAULT 'papryczka chilli',
    id_konsumenta INT,
    FOREIGN KEY (id_wykonawcy) REFERENCES postac(id_postaci),
    FOREIGN KEY (id_konsumenta) REFERENCES postac(id_postaci)
);

2. Wstaw bigos z papryczka chilli do tabeli przetwory.

-- Załóżmy, że ID wykonawcy i ID konsumenta dla bigosu to odpowiednio 1 i 2 (dla przykładu)
INSERT INTO przetwory (rok_produkcji, id_wykonawcy, zawartosc, id_konsumenta)
VALUES (2022, 1, 'bigos', 'papryczka chilli', 2);

Zadanie 5

1. Wstaw 5 wikingów do tabeli postaci.

INSERT INTO postac (nazwa, rodzaj, data_ur, wiek)
VALUES 
    ('Wiking1', 'wiking', '1980-01-01', 35),
    ('Wiking2', 'wiking', '1985-03-15', 30),
    ('Wiking3', 'wiking', '1990-05-20', 25),
    ('Wiking4', 'wiking', '1995-08-10', 20),
    ('Wiking5', 'wiking', '2000-12-25', 15);

2. Stworz tabele statek z polami:
a. nazwa statku - klucz gtówny
b. rodzaj statku - typ wyliczeniowy
c. data wodowania - typ daty
d. max_ladownosc - liczba dodatnia

CREATE TABLE statek (
    nazwa_statku VARCHAR(50) PRIMARY KEY,
    rodzaj_statku ENUM('żaglowiec', 'okręt wojenny', 'statek handlowy'),
    data_wodowania DATE,
    max_ladownosc INT UNSIGNED
);

3. Dodaj dwa statki do tabeli.

INSERT INTO statek (nazwa_statku, rodzaj_statku, data_wodowania, max_ladownosc)
VALUES 
    ('HMS Victory', 'okręt wojenny', '1765-09-01', 800),
    ('Black Pearl', 'żaglowiec', '1688-07-10', 500);

4. Dodaj pola do tabeli postac:
a. funkcja - ciag znakow.

ALTER TABLE postac
ADD COLUMN funkcja VARCHAR(50);

5. Zmien funkcje u Bjorna na kapitan.

UPDATE postac
SET funkcja = 'kapitan'
WHERE nazwa = 'Bjorn';

6. Dodaj klucz obcy w tabeli postac odwotujacy sie do statku.

ALTER TABLE postac
ADD COLUMN id_statku VARCHAR(50),
ADD FOREIGN KEY (id_statku) REFERENCES statek(nazwa_statku);

7. Powsadzaj wikingów oraz drozda na statki.

-- Załóżmy, że Wiking1, Wiking2, Drozd idą na statek HMS Victory
UPDATE postac
SET id_statku = 'HMS Victory'
WHERE nazwa IN ('Wiking1', 'Wiking2', 'Drozd');

-- Załóżmy, że Wiking3, Wiking4, Wiking5 idą na statek Black Pearl
UPDATE postac
SET id_statku = 'Black Pearl'
WHERE nazwa IN ('Wiking3', 'Wiking4', 'Wiking5');

8. Usun izbe spizarnia z tabell izba.

DELETE FROM izba WHERE nazwa_izby = 'spizarnia';

9. Usun tabele izba.

DROP TABLE izba;

Wej

rodzaje int
Stworz tabele NOT NULL INT AUTOINCREMENT INT(8) VARCHAR (80)
DODAJ KOLUMNE VARCHAR (20) NOT NULL
DODAJ KLUCZ OBCY DO TABELI
ALTER TABLE ADD FOREIGN



TOM 2



Zadanie 1

a) usmierc dwóch najstarszych wikingów, ale to nie moze byc Bjorn (DELETE z WHERE)

DELETE FROM postac
WHERE rodzaj = 'wiking' AND nazwa NOT LIKE 'Bjorn'
ORDER BY wiek DESC
LIMIT 2;

b) usun klucz glówny z tabeli postac - moze byc potrzebnych kilka komend (np. odtaczenie kluczy
obcych)

ALTER TABLE postac DROP PRIMARY KEY - aby to to najpierw to
#1 - usuneicie auto_increment - jesli jest 
ALTER TABLE postac CHANGE id_postaci id_postaci int;
ALTER TABLE postac MODIFY id_postaci int; - usuniecie auto_increment

#2 - usuniecie kluczy obcy

ALTER TABLE walizka DROP FOREIGN KEY walizka_ibfk_1; 

Zadanie 2

a) do tabeli postac dodaj pole pesel stadajace sie z 11 znaków i ustaw to pole na klucz glowny

ALTER TABLE postac ADD COLUMN pesel char(11) PRIMARY KEY first; (żeby to zadziałało, to trzeba ustawić coś w tabeli)

UPTADE postac SET pesel = '98434534592' + id_postaci;
ALTER TABLE postac ADD PRIMARY KEY (pesel);

b) w tabeli postac zmien pole rodzaj, tak, aby mozliwe byto dodanie syreny. (ENUM dodaj syrene)

ALTER TABLE postac MODIFY  rodzaj enum('(Trzeba wszystko wypisac jeszcze raz + coś nowego)')

c) wstaw do tabeli syrene o nazwie Gertruda Nieszczera

INSERT INTO postac (pesel,id_postaci,nazwa,rodzaj,data_ur,wiek)  VALUES ('23423423423',5,'Gertruda Nieszczera', 'syrena', '2023-11-23',125);

DODATEK WYSWIETLANIE 

# % - dowolny ciag znakow, _ - dokladnie jeden znak
SELECT nazwa FROM postac WHERE nazwa like '_r%';
select nazwa from postac WHERE nazwa like '__-__';
select nazwa from postac where nazwa regexp '%a%';

Zadanie 3 

a) Wszystkie postacie, które maja w swojej nazwie 'a', wadi na statek Bjorna

UPDATE postac SET statek = 'Czarna Perla' WHERE nazwa LIKE '%a%'

b) Zmniejsz ladownosc wszystkim statkom o 30%, których data wodowania byla w XX wieku

(SORTOWANIE)
SELECT * FROM statek WHERE data_wodowania >='1901-01-01' AND data_wodowania <= '2003-10-02';
SELECT * FROM statek WHERE data_wodowania BETWEEN '1903-94-23' AND '2009-12-31';
SELECT data_wodowania FROM statek;
SELECT year/day/month (data_wodowania) FROM statek;
SELECT * FROM statek WHERE year (data_wodoowania) BETWEEN 1901 AND 2000;
(KONIEC) 

Update statek set max_ladownosc = max_ladownosc * 0.7 where year(data_wodowania) between 1701 and 2001;

c) ustaw warunek sprawdzajacy czy wiek postaci nie jest wiekszy od 1000

ALTER TABLE postac ADD CHECK (wiek <= 1000); - jesli teraz bysmy chcieli cos zmieic w tabeli to musi to spelniac to.

Zadanie 4

a) Do postaci dodaj weza Loko, tylko nie wadzaj go na statek.

# najpierw enum

ALTER TABLE postac MODIFY rodzaj enum('wiking','ptak','kobieta','syrena','waz');

# Teraz waz Loko

INSERT INTO postac (pesel,id_postaci,nazwa,rodzaj,data_ur,wiek,funkcja) VALUES ('12345678910','6','Loko','waz','2023-11-20',12,'waz');

b) Stwórz nowa tabele na podstawie tabeli Postacie (doktadnie takie same pola), 
nazwij ja Marynarz - wrzuc do tej tabeli wszystkie postacie które maja zdefiniowany statek

CREATE TABLE marynarz LIKE postac; (nie kopiuje kluczy obcych)

INSERT INTO  marynarz SELECT * FROM postac WHERE id_statku IS NOT NULL;

2 - sposob czyli przy stworzeniu tabeli aby odrazu dodal ale tu nie kopiuje klucza glownego i obcego.

CREATE TABLE marynarz3 AS SELECT * FROM postac WHERE statek IS NOT NULL;

c) dostosuj odpowiednio klucze glowne i obce

# My tylko klucz obcy bo mamy juz glowny skopiowany.

ALTER TABLE marynarz ADD FOREIGN KEY (id_statku) REFERENCES statek(nazwa_statku);

Zadanie 5

a) wysadz wszystkich ze statku

UPDATE marynarz SET id_statku = NULL WHERE id_postaci IN (5,3,4,5,7);

b) usmierc jednego wikinga

DELETE FROM marynarz WHERE nazwa = 'Barbarosa';

c) zniszcz wszystkie statki

# Najpierw trzeba usunac klucze obce ktore sie odwoluja do tych statkow.

ALTER TABLE postac DROP FOREIGN KEY postac_ibfk_1;

# Teraz usuwamy statki

DELETE FROM statek WHERE max_ladownosc = 560;
DELETE FROM statek WHERE max_ladownosc = 200;

d) usun tabele statek

# najpierw klucz

ALTER TABLE marynarz DROP FOREIGN KEY marynarz_ibfk_1;

# Potem tabelka.

DROP TABLE statek;

e) stworz tabele zwierz z polami id - klucz gtowny samo zwiekszajacy sie, nazwa - ciag znakow, wiek - liczba

CREATE TABLE zwierz ( id_zwierz INT AUTO_INCREMENT PRIMARY KEY, nazwa TEXT, wiek INT );

f) przekopiuj z tabeli postac wszystkie zwierzaki

INSERT INTO zwierz (id_zwierz,nazwa,wiek) SELECT id_postaci,nazwa,wiek FROM  postac WHERE rodzaj IN ('waz','ptak');

wejsc
1)usun z tabelki cos ponizej 5 punktow
2) dodaj kolumne
3)zmien modyfikacje z  punktow dodaj do nich 3 punkty dla xx wieku



TOM 3



Zadanie 1
a)  create table zasob  as select * from wikingowie.zasob;
b)  select * from zasob;
c)  SELECT * FROM zasob WHERE rodzaj = 'jedzenie';
d)  SELECT idZasobu  FROM zasob WHERE (SELECT idKreatury FROM kreatura WHERE idKreatury = 5);
d) SELECT idZasobu, ilosc  FROM zasob WHERE (SELECT idKreatury FROM kreatura WHERE idKreatury = 1); 
d) SELECT idZasobu, ilosc  FROM zasob WHERE (SELECT idKreatury FROM kreatura WHERE idKreatury = 5);

Zadanie 2 
a) SELECT * FROM kreatura WHERE rodzaj NOT LIKE 'wiedzma' AND udzwig >= 50;
a) SELECT * FROM kreatura WHERE NOT rodzaj = 'wiedzma' AND udzwig >=50;
b) SELECT * FROM zasob WHERE waga between 2 AND 5;
c)  SELECT * FROM kreatura WHERE nazwa = '%or%' AND udzwig between 30 AND 70;

Zadanie 3 
a) SELECT * FROM zasob WHERE month(dataPozyskania) between 07 AND 08;
b) SELECT * FROM zasob order by rodzaj;
SELECT DISTINCT rodzaj FROM kreatura;
c) SELECT * FROM kreatura order by dataUr DESC LIMIT 5;

DODATKOWE
SELECT nazwa, ilosc,rodzaj FROM zasob WHERE rodzaj = 'jedznie' AND ilosc = 1;
SELECT distinct ilosc,rodzaj FROM zasob WHERE rodzaj = 'jedznie' AND ilosc = 1; = usuwa dublikaty (wartosci powtarzajace sie itp)

SELECT concat('Ala','ma','kota'); - laczenie tego co w srodku
SELECT concat (nazwa. 'to id=', idKreatury) FROM kreatura;

Zadanie 4
a) select distinct rodzaj FROM zasob;
